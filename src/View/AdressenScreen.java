/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DBService.ArtikelHelper;
import DBService.BestellungHelper;
import DBService.UserAdresseHelper;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import model.Warenkorb;
import model.WarenkorbTableModel;

/**
 *
 * @author fixch
 */
public class AdressenScreen extends javax.swing.JFrame {

    /**
     * Creates new form AdressenScreen
     */
    private double gesamtpreisAllerArtikel = 0.0;
    private final HashMap<Integer, Integer> alleBestellenArtikel;
    private HashMap<Integer, String> adressen;

    public AdressenScreen(double gesamtpreisAllerArtikel, HashMap<Integer, Integer> bestellteArtikel) throws SQLException {
        initComponents();
        this.gesamtpreisAllerArtikel = gesamtpreisAllerArtikel;
        this.alleBestellenArtikel = bestellteArtikel;
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
        fillComboboxen();
    }
    
    //F체llt die Comboboxen mit Werten
    private void fillComboboxen() throws SQLException {
        //Kategorien
        this.adressen = UserAdresseHelper.getAlleUserAdresse(); //UserAdresseHelper.getAlleUserAdresse(WIDTH)
        ArrayList<Integer> alleIDsKategorien = new ArrayList<>();
        alleIDsKategorien.addAll(this.adressen.keySet());
        for (int i = 0; i < alleIDsKategorien.size(); i++) {
            this.CB_Adresse.addItem(this.adressen.get(alleIDsKategorien.get(i)));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LB_Adresse = new javax.swing.JLabel();
        BT_Bestellen = new javax.swing.JButton();
        CB_Adresse = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LB_Adresse.setText("Bitte w채hlen Sie Ihre Adresse");

        BT_Bestellen.setText("Bestellen");
        BT_Bestellen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_BestellenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(LB_Adresse))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BT_Bestellen)
                            .addComponent(CB_Adresse, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LB_Adresse)
                .addGap(18, 18, 18)
                .addComponent(CB_Adresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(BT_Bestellen)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BT_BestellenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_BestellenActionPerformed
        String selectedObj = (String) CB_Adresse.getSelectedItem();
        
        if(selectedObj == null) {
            JOptionPane.showMessageDialog(this, "Sie m체ssen noch eine Adresse anlegen!");
            return;
        }
        
        else if (BestellungHelper.insertBestellung(1, this.alleBestellenArtikel)) //Bestellung erfolgreich in die DB eingetragen
        {
            JOptionPane.showMessageDialog(this, "Ihre Bestellung wurde erfolgreich gespeichert");
            //Warenkorb leeren
            Object[] alleIDs = Warenkorb.GetInstance().getWarenkorbinhalt().keySet().toArray();
            for (Object id : alleIDs) {
                Warenkorb.GetInstance().removeArtikel((int) id);
            }
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Ihre Bestellung konnte leider nicht gespeichert werden");
        }

//Rechnung in Datenbank einf체gen
        //INSERT INTO "Rechnung" (fk_user_adresse) VALUES (1);
        //INSERT INTO "RechnungArtikel" (fk_rechnung, fk_artikel, anzahl) VALUES (1, 1, 1);
        //Rechnung anzeigen
        //SELECT * FROM v_BestellungenAnzeigen WHERE "RechnungID" = 1
    }//GEN-LAST:event_BT_BestellenActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_Bestellen;
    private javax.swing.JComboBox CB_Adresse;
    private javax.swing.JLabel LB_Adresse;
    // End of variables declaration//GEN-END:variables
}
