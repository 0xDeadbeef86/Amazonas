/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DBService.MyDatabaseConnection;
import java.awt.List;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author fixch
 */
public class ArtikelForm extends javax.swing.JFrame {

    HashMap<Integer, Integer> mehrwertsteuersaetze;
    HashMap<Integer, String> kategorien;
    /**
     * Creates new form UserAnlegen
     */
    public ArtikelForm() throws SQLException {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        
        this.CheckBox_Aktiv.setSelected(true);
        
        //auslagern
        //Mehrwertsteuers√§tze
        this.mehrwertsteuersaetze = GetMehrwertsteuersaetzeFromDB();
        ArrayList<Integer> idMehrwertsteuer = new ArrayList<>();
        idMehrwertsteuer.addAll(this.mehrwertsteuersaetze.keySet());
        for (int i = 0; i < idMehrwertsteuer.size(); i++) {
            this.CB_Mehrwertsteuersatz.addItem(this.mehrwertsteuersaetze.get(idMehrwertsteuer.get(i)) + "%");
        }
        
        
        //Kategorien
        this.kategorien = GetKategorienFromDB();
        ArrayList<Integer> idKategorien = new ArrayList<>();
        idKategorien.addAll(this.kategorien.keySet());
        for (int i = 0; i < idKategorien.size(); i++) {
            this.CB_Kategorie.addItem(this.kategorien.get(idKategorien.get(i)));
        }
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LB_Name = new javax.swing.JLabel();
        TB_Name = new javax.swing.JTextField();
        LB_Aktion = new javax.swing.JLabel();
        LB_Beschreibung = new javax.swing.JLabel();
        TF_Beschreibung = new javax.swing.JTextField();
        LB_Nettopreis = new javax.swing.JLabel();
        TB_Nettopreis = new javax.swing.JTextField();
        LB_Mehrwertsteuersatz = new javax.swing.JLabel();
        CB_Mehrwertsteuersatz = new javax.swing.JComboBox();
        LB_Kategorie = new javax.swing.JLabel();
        CB_Kategorie = new javax.swing.JComboBox();
        LB_Aktiv = new javax.swing.JLabel();
        CheckBox_Aktiv = new javax.swing.JCheckBox();
        BT_OK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LB_Name.setText("Artikelname:");

        LB_Aktion.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        LB_Aktion.setText("Artikel anlegen/bearbeiten");
        LB_Aktion.setName(""); // NOI18N

        LB_Beschreibung.setText("Beschreibung:");

        LB_Nettopreis.setText("Nettopreis:");

        LB_Mehrwertsteuersatz.setText("Mehrwertsteuer:");

        LB_Kategorie.setText("Kategorie:");

        LB_Aktiv.setText("aktiv");

        CheckBox_Aktiv.setSelected(true);

        BT_OK.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        BT_OK.setText("Anlegen/Bearbeiten");
        BT_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_OKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LB_Kategorie)
                            .addComponent(LB_Aktiv))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CB_Kategorie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CheckBox_Aktiv)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LB_Mehrwertsteuersatz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CB_Mehrwertsteuersatz, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LB_Beschreibung)
                            .addComponent(LB_Nettopreis)
                            .addComponent(LB_Name))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TB_Name)
                            .addComponent(TF_Beschreibung)
                            .addComponent(TB_Nettopreis)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LB_Aktion)
                            .addComponent(BT_OK))
                        .addGap(0, 175, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LB_Aktion)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_Name)
                    .addComponent(TB_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LB_Beschreibung)
                    .addComponent(TF_Beschreibung, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_Nettopreis)
                    .addComponent(TB_Nettopreis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_Mehrwertsteuersatz)
                    .addComponent(CB_Mehrwertsteuersatz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LB_Kategorie)
                    .addComponent(CB_Kategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CheckBox_Aktiv)
                    .addComponent(LB_Aktiv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(BT_OK)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BT_OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_OKActionPerformed
       
        boolean isAktiv = false;
        String name = "";
        String beschreibung = "";
        int nettoPreis = 0;
        int mehrwertsteuerID = 0;
        int kategorieID = 0;
        
        if(this.CheckBox_Aktiv.isSelected())
        {
            isAktiv = true;
        }
        
        if(!"".equals(this.TB_Name.getText()))
        {
            name = this.TB_Name.getText();
        }
        else
        {
            //Fehlermeldung zusammensetzen
            JOptionPane.showMessageDialog(this,"Bitte geben Sie einen Artikelnamen ein");
        }
        
        beschreibung = this.TF_Beschreibung.getText();
        
        if(!"".equals(this.TB_Nettopreis.getText()))
        {
            nettoPreis = Integer.parseInt(this.TB_Nettopreis.getText());
        }
        else
        {
            
        }
        
        //auslagern
        String wertComboboxMehrwertsteuer = (String) this.CB_Mehrwertsteuersatz.getSelectedItem();
        if (wertComboboxMehrwertsteuer.endsWith("%"))
            {
               wertComboboxMehrwertsteuer = wertComboboxMehrwertsteuer.substring(0, wertComboboxMehrwertsteuer.length()-1);
            }
        System.out.println(wertComboboxMehrwertsteuer);
        
        int i = 0;
        int tempIDMehrwertsteuer = 0;
        for (int wertMehrwertsteuer : this.mehrwertsteuersaetze.values())
        {
            if(wertMehrwertsteuer == Integer.parseInt(wertComboboxMehrwertsteuer))
            {
                Set a = this.mehrwertsteuersaetze.keySet();
                
                tempIDMehrwertsteuer = (int) a.toArray()[i];
            }
            i++;
        }
        
        if(tempIDMehrwertsteuer != 0)
        {
            mehrwertsteuerID = tempIDMehrwertsteuer;
        }
        
        
       //auslagern
        String wertComboboxKategorie = (String) this.CB_Kategorie.getSelectedItem();
        if (wertComboboxKategorie.endsWith("%"))
            {
               wertComboboxKategorie = wertComboboxKategorie.substring(0, wertComboboxKategorie.length()-1);
            }
        System.out.println(wertComboboxKategorie);
        
        System.out.println(mehrwertsteuerID);
        
        int j = 0;
        int tempIDKategorie = 0;
        for (String wertKategorie : this.kategorien.values())
        {
            if(wertComboboxKategorie.equals(wertKategorie))
            {
                Set a = this.kategorien.keySet();
                
                tempIDKategorie = (int) a.toArray()[j];
            }
            j++;
        }
        
        if(tempIDKategorie != 0)
        {
            kategorieID = tempIDKategorie;
        }
        
        System.out.println(kategorieID);
        
        
        
    }//GEN-LAST:event_BT_OKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArtikelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArtikelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArtikelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArtikelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ArtikelForm().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ArtikelForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    private HashMap<Integer, Integer> GetMehrwertsteuersaetzeFromDB() throws SQLException
    {
        String sql;
        sql = "SELECT * FROM \"Mehrwertsteuer\"";
        MyDatabaseConnection dbVerbindung = new MyDatabaseConnection();
        dbVerbindung.connect();
        System.out.println(sql);
        ResultSet res = dbVerbindung.executeQuery(sql);
        System.out.println(res);
        
        HashMap<Integer, Integer> mehrwertsteuersaetze = new HashMap<>();
        
        //ArrayList<Integer> mehrwertsteuersaetze = new ArrayList<>();
        int id = 0;
        int mehrwertsteuersatz = 0;
        while(res.next()) {          
            id = Integer.parseInt(res.getString("id"));
            mehrwertsteuersatz = Integer.parseInt(res.getString("mehrwertsteuersatz"));
            if(id != 0 && mehrwertsteuersatz != 0)
            {
                mehrwertsteuersaetze.put(id, mehrwertsteuersatz);            
            }
            
        }
        return mehrwertsteuersaetze;
    }
    
        private HashMap<Integer, String> GetKategorienFromDB() throws SQLException
    {
        String sql;
        sql = "SELECT * FROM \"Kategorie\"";
        MyDatabaseConnection dbVerbindung = new MyDatabaseConnection();
        dbVerbindung.connect();
        System.out.println(sql);
        ResultSet res = dbVerbindung.executeQuery(sql);
        System.out.println(res);
        
        HashMap<Integer, String> alleKategorien = new HashMap<>();
        
        //ArrayList<Integer> mehrwertsteuersaetze = new ArrayList<>();
        int id = 0;
        String kategorie = "";
        while(res.next()) {          
            id = Integer.parseInt(res.getString("id"));
            kategorie = res.getString("name");
            if(id != 0 && !"".equals(kategorie))
            {
                alleKategorien.put(id, kategorie);            
            }
            
        }
        return alleKategorien;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_OK;
    private javax.swing.JComboBox CB_Kategorie;
    private javax.swing.JComboBox CB_Mehrwertsteuersatz;
    private javax.swing.JCheckBox CheckBox_Aktiv;
    private javax.swing.JLabel LB_Aktion;
    private javax.swing.JLabel LB_Aktiv;
    private javax.swing.JLabel LB_Beschreibung;
    private javax.swing.JLabel LB_Kategorie;
    private javax.swing.JLabel LB_Mehrwertsteuersatz;
    private javax.swing.JLabel LB_Name;
    private javax.swing.JLabel LB_Nettopreis;
    private javax.swing.JTextField TB_Name;
    private javax.swing.JTextField TB_Nettopreis;
    private javax.swing.JTextField TF_Beschreibung;
    // End of variables declaration//GEN-END:variables
}
